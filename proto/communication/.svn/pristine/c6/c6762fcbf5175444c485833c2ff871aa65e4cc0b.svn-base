package lm;
import "common_enum.proto";
import "lm_base.proto";
import "trade_road_base.proto";
import "expressmen_base.proto";
import "raffle_base.proto";

// --------------------商路系统交互消息----------------------
// message: TRADE_ROAD_LIST
message TradeRoadListRequest {
  required int32 user_id = 1;
}
message TradeRoadListResponse {
  optional _TradeRoadInfo trade_road_info = 1;
}

// message: TRADE_ROAD_UNLOCK_CITY
message TradeRoadUnlockCityResponse {
  optional _TradeRoadInfo  trade_road_info = 1;
  optional int32 city_id = 2;
}

// message: TRADE_ROAD_OPEN_BRANCH
message TradeRoadOpenBranchResponse {
  optional _TradeRoadInfo  trade_road_info = 1;
  optional int32 branch_id = 2;
}

// message: TRADE_ROAD_FETCH_REWARD
message TradeRoadFetchRewardRequest {
  required int32 user_id = 1;
  required int32 city_id = 2;
  required int32 branch_id = 3;
}

message TradeRoadFetchRewardResponse {
  optional _TradeRoadInfo trade_road_info = 1;
  optional _PlayerInfo player_info = 2;
  optional _GoodsInfo goods_info = 3;
  optional _RewardInfo reward_info = 4;
}

// message: TRADE_ROAD_FETCH_ALL_REWARD
message TradeRoadFetchAllRewardRequest {
  required int32 user_id = 1;
}

message TradeRoadFetchAllRewardResponse {
  optional _TradeRoadInfo trade_road_info = 1;
  optional _PlayerInfo player_info = 2;
  optional _GoodsInfo goods_info = 3;
  optional _RewardInfo reward_info = 4;
}

// message: TRADE_ROAD_REFRESH_PLAYERS
message TradeRoadRefreshPlayersRequest {
  required int32 user_id = 1;
  required int32 current_refresh_count = 2;
}
message TradeRoadRefreshPlayersResponse {
  optional _TradeRoadInfo trade_road_info = 1;
  optional _PlayerInfo player_info = 2;
  optional _ErrorInfo error_info = 3;
}

// message: TRADE_ROAD_SELECT_PLAYER_EXPRESSMAN
message TradeRoadSelectPlayerExpressmanRequest {
  required int32 user_id = 1;
  repeated _TradeRoadAssistPlayerInfo assistPlayers = 2;
}
message TradeRoadSelectPlayerExpressmanResponse {
  optional _TradeRoadInfo trade_road_info = 1;
}

// message: TRADE_ROAD_BRANCH_CHECK_OPERATED
message TradeRoadBranchOperatedRequest {
  required int32 user_id = 1;
  optional int32 city_id = 2;
  optional int32 branch_id = 3;
}

message TradeRoadBranchOperatedResponse {
  optional _TradeRoadInfo  trade_road_info = 1;
  optional int32 city_id = 2;
  optional int32 branch_id = 3;
}

// message: TRADE_ROAD_SELECT_OPERATION_EXPRESSMAN
message TradeRoadSelectOperationExpressmanRequest {
  required int32 user_id = 1;
  required int32 expressman_id = 2;
  required int32 city_id = 3;
  required int32 branch_id = 4;
  required int32 attribute_value = 5;
}
message TradeRoadSelectOperationExpressmanResponse {
  optional _TradeRoadInfo trade_road_info = 1;
  optional int32 city_id = 2;
  optional int32 branch_id = 3;
}

// message: TRADE_ROAD_RESET
message TradeRoadResetRequest {
  required int32 user_id = 1;
  optional int32 target_reset_count = 2; // 剩余的重置次数，以免客户端多次发送重置命令，导致浪费重置次数
}

message TradeRoadResetResponse {
  optional _TradeRoadInfo trade_road_info = 1;
}

// message：TRADE_ROAD_OPEN_BOX
message TradeRoadOpenBoxRequest {
  required int32 user_id = 1;  
  optional int32 city_id = 2;
  optional int32 branch_id = 3;
  optional int32 target_time = 4; // 第几次开启宝箱
  optional _TradeRoadBoxChestType chest_type = 5; // 高级，低级
}

message TradeRoadOpenBoxResponse {
  optional _TradeRoadBoxChestType chest_type = 1; // 高级，低级
  optional _TradeRoadInfo trade_road_info = 2;
  optional _PlayerInfo player_info = 3;
  optional _GoodsInfo goods_info = 4;
  optional _ExpressmenInfo expressmen_info = 5;//
  optional _RaffleGoodsInfo raffle_goods_info = 6; //
  optional _ErrorInfo error_info = 7;
  optional int32 branch_id = 8;
}

// message：TRADE_ROAD_SWEEP
message TradeRoadSweepRequest {
  required int32 user_id = 1;  
  optional int32 city_id = 2;
  optional int32 branch_id = 3;
}

message TradeRoadSweepResponse {
  optional int32 city_id = 1;
  optional int32 branch_id = 2;
  optional _TradeRoadInfo trade_road_info = 3;
  optional _PlayerInfo player_info = 4;
  optional _GoodsInfo goods_info = 5;
  optional _RewardInfo reward_info = 6; 
}

// message: TRADE_ROAD_SHOP_INFO
message TradeRoadShopInfoRequest {
  required int32 user_id = 1;   
}

message TradeRoadShopInfoResponse {
  optional _TradeRoadShopInfo trade_road_shop_info = 1;
}

// message: TRADE_ROAD_SHOP_BUY
message TradeRoadShopBuyRequest {
  required int32 user_id = 1;   
  required int32 id = 2;
}

message TradeRoadShopBuyResponse {
  optional int32 id = 1;
  optional _TradeRoadShopInfo trade_road_shop_info = 2;
  optional _PlayerInfo player_info = 3;
  optional _GoodsInfo goods_info = 4;
  optional _ErrorInfo error_info = 5;
  optional _RewardInfo reward_info = 6;
}

// message: TRADE_ROAD_SHOP_REFRESH
message TradeRoadShopRefreshRequest {
  required int32 user_id = 1;   
  optional int32 target_refresh_times = 2;
}

message TradeRoadShopRefreshResponse {
  optional _TradeRoadShopInfo trade_road_shop_info = 1;
  optional _PlayerInfo player_info = 2;
  optional _ErrorInfo error_info = 3;
}
